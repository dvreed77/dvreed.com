---
import BaseLayout from "../layouts/BaseLayout.astro";
import Card from "../components/Card.astro";
import BlogCard from "../components/BlogCard.astro";
import { getCollection, type CollectionEntry } from 'astro:content';

const allProjects = (await getCollection('projects'))
  .sort((a, b) => new Date(b.data.startDate).getTime() - new Date(a.data.startDate).getTime());

const allPosts = (await getCollection('posts'))
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());
---

<BaseLayout title="Dave Reed">
  <main>
    <h1>
      Hi, ðŸ‘‹ I'm <span
        class="bg-gradient-to-r from-green-400 to-blue-500 bg-clip-text text-transparent"
        >Dave</span
      >
    </h1>

    <div class="mb-10">
      <div class="mb-5">
        <h1 class="text-3xl border-b border-gray-300 pb-2 pt-4">
          Projects
        </h1>
      </div>
      <ul role="list" class="grid gap-4 grid-cols-1 md:grid-cols-2">
        {
          allProjects.map((post) => (
            <Card
              href={`/projects/${post.slug}`}
              title={post.data.title}
              body={post.data.blurb}
            />
          ))
        }
      </ul>
    </div>

    <div class="mb-10">
      <div class="mb-5">
        <h1 class="text-3xl border-b border-gray-300 pb-2 pt-4">
          Explorations
        </h1>
      </div>
      <ul role="list" class="grid gap-4 grid-cols-1 md:grid-cols-2">
        {
          allPosts.map((post) => (
          <BlogCard
            href={`/posts/${post.slug}`}
            title={post.data.title}
            date={post.data.date}
          />
        ))
      }
    </ul>
    </div>
  </main>
</BaseLayout>

<style>
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
